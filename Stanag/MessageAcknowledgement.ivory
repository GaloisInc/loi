include stanagpacking

struct MessageAcknowledgement
{
 struct ivory_string_Stanag idd;
 uint32_t messageInstance;
 uint32_t messageType;
 int32_t messageLength;
 int32_t streamId;
 int32_t packetSequenceNumber;
 double timeStamp;
 int32_t vehicleId;
 int32_t cucsId;
 int32_t vsmId;
 int32_t dataLinkId;
 double originalMessageTimeStamp;
 uint32_t originalMessageInstanceId;
 uint32_t originalMessageType;
}


uint32_t messageAcknowledgementMsgNum() { return 1400; }
uint32_t messageAcknowledgementLength() { return 40; }


void messageAcknowledgement_setmessageInstance(*struct MessageAcknowledgement msg, uint32_t val)
{
  store msg.messageInstance as val;
}

void messageAcknowledgement_setmessageType(*struct MessageAcknowledgement msg, uint32_t val)
{
  store msg.messageType as val;
}

void messageAcknowledgement_setmessageLength(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.messageLength as val;
}

void messageAcknowledgement_setstreamId(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.streamId as val;
}

void messageAcknowledgement_setpacketSequenceNumber(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.packetSequenceNumber as val;
}

void messageAcknowledgement_settimeStamp(*struct MessageAcknowledgement msg, double val)
{
  store msg.timeStamp as val;
}

void messageAcknowledgement_setvehicleId(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.vehicleId as val;
}

void messageAcknowledgement_setcucsId(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.cucsId as val;
}

void messageAcknowledgement_setvsmId(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.vsmId as val;
}

void messageAcknowledgement_setdataLinkId(*struct MessageAcknowledgement msg, int32_t val)
{
  store msg.dataLinkId as val;
}

void messageAcknowledgement_setoriginalMessageTimeStamp(*struct MessageAcknowledgement msg, double val)
{
  store msg.originalMessageTimeStamp as val;
}

void messageAcknowledgement_setoriginalMessageInstanceId(*struct MessageAcknowledgement msg, uint32_t val)
{
  store msg.originalMessageInstanceId as val;
}

void messageAcknowledgement_setoriginalMessageType(*struct MessageAcknowledgement msg, uint32_t val)
{
  store msg.originalMessageType as val;
}

void messageAcknowledgement_unpack(*Buf buf, * struct MessageAcknowledgement msg)
{
  unpackStanagString(msg.idd, buf, 0, 10);
  store msg.messageInstance as unpackUint32(buf, 10);
  store msg.messageType as unpackUint32(buf, 14);
  store msg.messageLength as unpackInt32(buf, 18);
  store msg.streamId as unpackInt32(buf, 22);
  store msg.packetSequenceNumber as unpackInt32(buf, 26);
  store msg.timeStamp as unpackDouble(buf, 30);
  store msg.vehicleId as unpackInt32(buf, 38);
  store msg.cucsId as unpackInt32(buf, 42);
  store msg.vsmId as unpackInt32(buf, 46);
  store msg.dataLinkId as unpackInt32(buf, 50);
  store msg.originalMessageTimeStamp as unpackDouble(buf, 54);
  store msg.originalMessageInstanceId as unpackUint32(buf, 62);
  store msg.originalMessageType as unpackUint32(buf, 66);
}


void messageAcknowledgement_pack(* struct MessageAcknowledgement msg, *Buf buf)
{
  packStanagString(msg.idd, buf, 0, 10);
  packUint32(msg->messageInstance, buf, 10);
  packUint32(msg->messageType, buf, 14);
  packInt32(msg->messageLength, buf, 18);
  packInt32(msg->streamId, buf, 22);
  packInt32(msg->packetSequenceNumber, buf, 26);
  packDouble(msg->timeStamp, buf, 30);
  packInt32(msg->vehicleId, buf, 38);
  packInt32(msg->cucsId, buf, 42);
  packInt32(msg->vsmId, buf, 46);
  packInt32(msg->dataLinkId, buf, 50);
  packDouble(msg->originalMessageTimeStamp, buf, 54);
  packUint32(msg->originalMessageInstanceId, buf, 62);
  packUint32(msg->originalMessageType, buf, 66);
}


